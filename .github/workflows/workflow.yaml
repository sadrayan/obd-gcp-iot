name: 'Terraform CI'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan 
      env:
        TF_VAR_MENDER_USERNAME : ${{ secrets.MENDER_USERNAME }}
        TF_VAR_MENDER_PASSWORD : ${{ secrets.MENDER_PASSWORD }}
    
    # Generates an execution apply for Terraform
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve 
      env:
        TF_VAR_MENDER_USERNAME : ${{ secrets.MENDER_USERNAME }}
        TF_VAR_MENDER_PASSWORD : ${{ secrets.MENDER_PASSWORD }}

  device:
    name: "device build"
    needs: terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./devices

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: build device
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: ./deployment.sh ${GITHUB_SHA::8}

      - name: upload-files
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: ${{ github.workspace }}/devices/deployment/rpi-package.zip${GITHUB_SHA::8}
          destination: ${{ secrets.GCP_PROJECT_ID }}_data_deployment/device/